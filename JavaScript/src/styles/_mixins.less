

.font-size(@sizeValue) {
  @remValue: @sizeValue;
  @pxValue: (@sizeValue * 10);
  font-size: ~"@{pxValue}px";
  font-size: ~"@{remValue}rem";
}



.gradient (@startColor: #eee, @endColor: white) {
  background-color: @startColor;
  background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
  background: gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
  background: -webkit-linear-gradient(top, @startColor, @endColor);
  background: linear-gradient(top, @startColor, @endColor);
  background: -moz-linear-gradient(top, @startColor, @endColor);
  background: -ms-linear-gradient(top, @startColor, @endColor);
  background: -o-linear-gradient(top, @startColor, @endColor);
}
.horizontal-gradient (@startColor: #eee, @endColor: white, @start: 0%, @end: 100%) {
  background: @startColor; /* Old browsers */
  background: -moz-linear-gradient(left,  @startColor @start, @endColor @end); /* FF3.6+ */
  background: -webkit-gradient(linear, left, right, color-stop(@start,@startColor), color-stop(@end,@endColor)); /* Chrome,Safari4+ */
  background: gradient(linear, left, right, color-stop(@start,@startColor), color-stop(@end,@endColor)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(left,  @startColor @start,@endColor @end); /* Chrome10+,Safari5.1+ */
  background: linear-gradient(left,  @startColor @start,@endColor @end); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(left,  @startColor @start,@endColor @end); /* Opera 11.10+ */
  background: -ms-linear-gradient(left,  @startColor @start,@endColor @end); /* IE10+ */
  background: linear-gradient(to right,  @startColor @start,@endColor @end); /* W3C */
}

.animation (@name, @duration: 300ms, @delay: 0, @ease: ease) {
  animation: @name @duration @delay @ease;
  -webkit-animation: @name @duration @delay @ease;
  -moz-animation:    @name @duration @delay @ease;
  -ms-animation:     @name @duration @delay @ease;
}

.transition (@transition) {
  transition: @transition;
  -webkit-transition: @transition;
  -moz-transition:    @transition;
  -ms-transition:     @transition;
  -o-transition:      @transition;
}
.transition-properties(...) {
  -webkit-transition: @arguments;
  -moz-transition: @arguments;
  -o-transition: @arguments;
  transition: @arguments;
}
.transform(@string){
  transform: @string;
  -webkit-transform: @string;
  -moz-transform:    @string;
  -ms-transform:     @string;
  -o-transform:      @string;
}
.scale (@factor) {
  transform: scale(@factor);
  -webkit-transform: scale(@factor);
  -moz-transform:    scale(@factor);
  -ms-transform:     scale(@factor);
  -o-transform:      scale(@factor);
}
.rotate (@deg) {
  transform: rotate(@deg);
  -webkit-transform: rotate(@deg);
  -moz-transform:    rotate(@deg);
  -ms-transform:     rotate(@deg);
  -o-transform:      rotate(@deg);
}
.skew (@deg, @deg2) {
  transform:       skew(@deg, @deg2);
  -webkit-transform:       skew(@deg, @deg2);
  -moz-transform:    skew(@deg, @deg2);
  -ms-transform:     skew(@deg, @deg2);
  -o-transform:      skew(@deg, @deg2);
}

// --------------------------------------------------
// Flexbox LESS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
// flex or inline-flex
.flex-display() {
  display: -webkit-flex; //-webkit needs to be first or our css minifier kills it
  display: flex;
  display: -moz-flex;
  display: -ms-flex; // IE11
  display: -ms-flexbox; // IE10 uses -ms-flexbox
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
.flex(@columns: initial) {
  flex: @columns;
  -webkit-flex: @columns;
  -moz-flex: @columns;
  -ms-flex: @columns;
}

.user-select (@val) {
  -webkit-touch-callout:  @val;
  -webkit-user-select:    @val;
  -khtml-user-select:     @val;
  -moz-user-select:       @val;
  -ms-user-select:        @val;
  user-select:            @val;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
  flex-direction: @direction;
  -webkit-flex-direction: @direction;
  -moz-flex-direction: @direction;
  -ms-flex-direction: @direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
  flex-wrap: @wrap;
  -webkit-flex-wrap: @wrap;
  -moz-flex-wrap: @wrap;
  -ms-flex-wrap: @wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
  flex-flow: @flow;
  -webkit-flex-flow: @flow;
  -moz-flex-flow: @flow;
  -ms-flex-flow: @flow;
}

// Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
  order: @order;
  -webkit-order: @order;
  -moz-order: @order;
  -ms-order: @order;
}

// Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
  flex-grow: @grow;
  -webkit-flex-grow: @grow;
  -moz-flex-grow: @grow;
  -ms-flex-grow: @grow; //IE 11 support
  -ms-flex: @grow; // IE 10 support
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
.flex-shrink(@shrink: 1) {
  flex-shrink: @shrink;
  -webkit-flex-shrink: @shrink;
  -moz-flex-shrink: @shrink;
  -ms-flex-shrink: @shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
.flex-basis(@width: auto) {
  flex-basis: @width;
  -webkit-flex-basis: @width;
  -moz-flex-basis: @width;
  -ms-flex-basis: @width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
.justify-content(@justify: flex-start) {
  justify-content: @justify;
  -webkit-justify-content: @justify;
  -moz-justify-content: @justify;
  -ms-justify-content: @justify;
  -ms-flex-pack: @justify;
}

// For IE10
.justify-content(@justify: flex-start) when (@justify = flex-start) {
  -ms-flex-pack: start;
}

// For IE10
.justify-content(@justify: flex-end) when (@justify = flex-start) {
  -ms-flex-pack: end;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
.align-content(@align: stretch) {
  align-content: @align;
  -webkit-align-content: @align;
  -moz-align-content: @align;
  -ms-align-content: @align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
.align-items(@align: stretch) {
  align-items: @align;
  -webkit-align-items: @align;
  -moz-align-items: @align;
  -ms-align-items: @align;
  -ms-flex-align: @align;
}

// for IE10
.align-items(@align: stretch) when (@align = flex-start) {
  -ms-flex-align: start;
}

// for IE10
.align-items(@align: stretch) when (@align = flex-end) {
  -ms-flex-align: end;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
.align-self(@align: auto) {
  align-self: @align;
  -webkit-align-self: @align;
  -moz-align-self: @align;
  -ms-align-self: @align;
}

// Change place holder font
.colormixin(@color:false) when not (@color=false){color: @color;}
.stylemixin(@style:false) when not (@style=false){
  .style(@style) when (@style=italic) {font-style: @style;}
  .style(@style) when (@style=bold) {font-weight: @style;}
  .style(@style);
}

// change place holder font
.placeholder(@color: false, @style: false){
  &::-webkit-input-placeholder {
    .colormixin(@color);
    .stylemixin(@style);
  }
  &:-moz-placeholder {
    .colormixin(@color);
    .stylemixin(@style);
  }
  &::-moz-placeholder {
    .colormixin(@color);
    .stylemixin(@style);
  }
  &:-ms-input-placeholder {
    .colormixin(@color);
    .stylemixin(@style);
  }
}

